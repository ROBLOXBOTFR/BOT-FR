# Remplacer la section d'aide existante par cette version am√©lior√©e

    @app_commands.command(name="help", description="Show all available ticket commands with detailed panel information")
    async def help(self, interaction: discord.Interaction):
        """Show all available ticket commands with detailed panel information"""
        await interaction.response.defer(ephemeral=True)
        
        # Check if user is staff
        is_staff = await self.permissions.is_ticket_staff(interaction.guild, interaction.user)
        is_admin = interaction.user.guild_permissions.administrator
        
        # Import panel colors and info
        panel_embeds = PanelEmbeds()
        
        # Use the support color for help
        embed = discord.Embed(
            title="üìö Ticket System Help",
            description="**Syst√®me avanc√© de tickets avec panels par cat√©gorie**\n\nVoici les commandes disponibles :",
            color=panel_embeds.colors.get('SUPPORT', discord.Color.blue())
        )
        
        # User commands
        embed.add_field(
            name="üßë‚Äçüíº Commandes Utilisateur",
            value=(
                "`/openticket <raison>` - Ouvrir manuellement un ticket\n"
                "`/close` - Fermer le ticket actuel\n"
                "`/help` - Afficher cette aide"
            ),
            inline=False
        )
        
        # Staff commands
        if is_staff:
            embed.add_field(
                name="üëÆ Commandes Staff",
                value=(
                    "`/forceclose <ticket>` - Forcer la fermeture d'un ticket\n"
                    "`/add <utilisateur>` - Ajouter un utilisateur au ticket\n"
                    "`/remove <utilisateur>` - Retirer un utilisateur du ticket\n"
                    "`/rename <nouveau_nom>` - Renommer un ticket\n"
                    "`/transfer <staff>` - Transf√©rer un ticket √† un autre membre du staff\n"
                    "`/listtickets` - Lister tous les tickets ouverts"
                ),
                inline=False
            )
        
        # Admin commands
        if is_admin:
            embed.add_field(
                name="üîß Commandes Admin",
                value=(
                    "`/setup` - Configurer le syst√®me de tickets\n"
                    "`/setstaff <role>` - D√©finir le r√¥le staff\n"
                    "`/setcategory <nom>` - D√©finir la cat√©gorie de tickets\n"
                    "`/setlogchannel <salon>` - D√©finir le salon des logs\n"
                    "`/setarchivechannel <salon>` - D√©finir le salon d'archives\n"
                    "`/addpanel <nom> <cat√©gorie> <question>` - Ajouter un nouveau panel de tickets\n"
                    "`/setpanel <cat√©gorie> <question>` - Personnaliser le panel par d√©faut\n"
                    "`/addtemplate <nom> <cat√©gorie> <message>` - Cr√©er un mod√®le de ticket\n"
                    "`/addfield <mod√®le> <nom> <label> <type>` - Ajouter un champ √† un mod√®le\n"
                    "`/listtemplates` - Lister tous les mod√®les de tickets"
                ),
                inline=False
            )
            
        # Get panels from database
        panels = await self.db.get_all_panels(interaction.guild.id)
        
        # Categories section
        if panels:
            categories = {}
            for panel in panels:
                category = panel.get('category', 'default')
                if category not in categories:
                    categories[category] = []
                categories[category].append(panel)
            
            # Add field for each category
            for category, category_panels in categories.items():
                emoji = panel_embeds.emoji.get(category, panel_embeds.emoji['default'])
                panel_names = ", ".join([f"`{p['name']}`" for p in category_panels])
                
                embed.add_field(
                    name=f"{emoji} Cat√©gorie: {category}",
                    value=(
                        f"{panel_embeds.descriptions.get(category, '')}\n\n"
                        f"**Panels disponibles:** {panel_names}"
                    ),
                    inline=False
                )
        else:
            embed.add_field(
                name="üé´ Panels de Tickets",
                value="Aucun panel configur√©. Utilisez `/setup` pour configurer le syst√®me avec les panels par d√©faut.",
                inline=False
            )
        
        embed.set_footer(text="Les utilisateurs peuvent cr√©er des tickets via les boutons dans le salon de cr√©ation de tickets")
        await interaction.followup.send(embed=embed)